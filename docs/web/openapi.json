{"components": {"schemas": {"AboutInfoModel": {"properties": {"git_hash": {"title": "Git Hash", "type": "string"}, "platform": {"title": "Platform", "type": "string"}, "python": {"title": "Python", "type": "string"}, "sqlite": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sqlite"}, "started_at": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Started At"}, "uptime": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Uptime"}, "uptime_seconds": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Uptime Seconds"}, "utc_now": {"title": "Utc Now", "type": "string"}, "version": {"title": "Version", "type": "string"}}, "required": ["version", "git_hash", "python", "platform", "utc_now"], "title": "AboutInfoModel", "type": "object"}, "AboutResponse": {"properties": {"info": {"$ref": "#/components/schemas/AboutInfoModel"}, "process": {"$ref": "#/components/schemas/ProcessInfoModel"}, "scheduler": {"$ref": "#/components/schemas/SchedulerSummaryModel-Output"}, "status": {"additionalProperties": {"$ref": "#/components/schemas/ProfileStatusModel"}, "title": "Status", "type": "object"}}, "required": ["info", "process", "scheduler", "status"], "title": "AboutResponse", "type": "object"}, "BackupMeta": {"description": "Metadata about a backup file used for listing in the UI.", "properties": {"age_seconds": {"title": "Age Seconds", "type": "number"}, "created_at": {"format": "date-time", "title": "Created At", "type": "string"}, "entries": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Entries"}, "filename": {"title": "Filename", "type": "string"}, "size_bytes": {"title": "Size Bytes", "type": "integer"}, "user": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "User"}}, "required": ["filename", "created_at", "size_bytes", "age_seconds"], "title": "BackupMeta", "type": "object"}, "Body_sync_profile_api_sync_profile__profile__post": {"properties": {"rating_keys": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Rating Keys"}}, "title": "Body_sync_profile_api_sync_profile__profile__post", "type": "object"}, "DeleteMappingResponse": {"properties": {"ok": {"title": "Ok", "type": "boolean"}}, "required": ["ok"], "title": "DeleteMappingResponse", "type": "object"}, "FieldCapability": {"description": "Describes supported operators and value type for a query field.", "properties": {"aliases": {"default": [], "items": {"type": "string"}, "title": "Aliases", "type": "array"}, "desc": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Desc"}, "key": {"title": "Key", "type": "string"}, "operators": {"items": {"$ref": "#/components/schemas/QueryFieldOperator"}, "title": "Operators", "type": "array"}, "type": {"$ref": "#/components/schemas/QueryFieldType"}, "values": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Values"}}, "required": ["key", "type", "operators"], "title": "FieldCapability", "type": "object"}, "GetHistoryResponse": {"description": "Paginated history response (flattened).", "properties": {"items": {"items": {"$ref": "#/components/schemas/HistoryItem"}, "title": "Items", "type": "array"}, "page": {"title": "Page", "type": "integer"}, "pages": {"title": "Pages", "type": "integer"}, "per_page": {"title": "Per Page", "type": "integer"}, "stats": {"additionalProperties": {"type": "integer"}, "default": {}, "title": "Stats", "type": "object"}, "total": {"title": "Total", "type": "integer"}}, "required": ["items", "page", "per_page", "total", "pages"], "title": "GetHistoryResponse", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "HistoryItem": {"description": "Serializable history entry with optional AniList and Plex metadata.", "properties": {"after_state": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "After State"}, "anilist": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Anilist"}, "anilist_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Anilist Id"}, "before_state": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Before State"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message"}, "id": {"title": "Id", "type": "integer"}, "outcome": {"title": "Outcome", "type": "string"}, "pinned_fields": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Pinned Fields"}, "plex": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Plex"}, "plex_child_rating_key": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Plex Child Rating Key"}, "plex_guid": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Plex Guid"}, "plex_rating_key": {"title": "Plex Rating Key", "type": "string"}, "plex_type": {"title": "Plex Type", "type": "string"}, "profile_name": {"title": "Profile Name", "type": "string"}, "timestamp": {"title": "Timestamp", "type": "string"}}, "required": ["id", "profile_name", "plex_rating_key", "plex_type", "outcome", "timestamp"], "title": "HistoryItem", "type": "object"}, "ListBackupsResponse": {"description": "Response model for listing backups.", "properties": {"backups": {"items": {"$ref": "#/components/schemas/BackupMeta"}, "title": "Backups", "type": "array"}}, "required": ["backups"], "title": "ListBackupsResponse", "type": "object"}, "ListMappingsResponse": {"properties": {"items": {"items": {"$ref": "#/components/schemas/MappingItemModel"}, "title": "Items", "type": "array"}, "page": {"title": "Page", "type": "integer"}, "pages": {"title": "Pages", "type": "integer"}, "per_page": {"title": "Per Page", "type": "integer"}, "total": {"title": "Total", "type": "integer"}, "with_anilist": {"default": false, "title": "With Anilist", "type": "boolean"}}, "required": ["items", "total", "page", "per_page", "pages"], "title": "ListMappingsResponse", "type": "object"}, "LogEntryModel": {"properties": {"level": {"title": "Level", "type": "string"}, "message": {"title": "Message", "type": "string"}, "timestamp": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Timestamp"}}, "required": ["level", "message"], "title": "LogEntryModel", "type": "object"}, "LogFileModel": {"properties": {"current": {"title": "Current", "type": "boolean"}, "mtime": {"title": "Mtime", "type": "integer"}, "name": {"title": "Name", "type": "string"}, "size": {"title": "Size", "type": "integer"}}, "required": ["name", "size", "mtime", "current"], "title": "LogFileModel", "type": "object"}, "MappingItemModel": {"description": "Flattened mapping item with optional AniList metadata.", "properties": {"anidb_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Anidb Id"}, "anilist": {"anyOf": [{"$ref": "#/components/schemas/MediaWithoutList"}, {"type": "null"}]}, "anilist_id": {"title": "Anilist Id", "type": "integer"}, "custom": {"default": false, "title": "Custom", "type": "boolean"}, "imdb_id": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Imdb Id"}, "mal_id": {"anyOf": [{"items": {"type": "integer"}, "type": "array"}, {"type": "null"}], "title": "Mal Id"}, "sources": {"default": [], "items": {"type": "string"}, "title": "Sources", "type": "array"}, "tmdb_mappings": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, {"type": "null"}], "title": "Tmdb Mappings"}, "tmdb_movie_id": {"anyOf": [{"items": {"type": "integer"}, "type": "array"}, {"type": "null"}], "title": "Tmdb Movie Id"}, "tmdb_show_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Tmdb Show Id"}, "tvdb_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Tvdb Id"}, "tvdb_mappings": {"anyOf": [{"additionalProperties": {"type": "string"}, "type": "object"}, {"type": "null"}], "title": "Tvdb Mappings"}}, "required": ["anilist_id"], "title": "MappingItemModel", "type": "object"}, "MediaCoverImage": {"description": "Model representing a media cover image.", "properties": {"color": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Color"}, "extraLarge": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Extralarge"}, "large": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Large"}, "medium": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Medium"}}, "title": "MediaCoverImage", "type": "object"}, "MediaFormat": {"description": "Enum representing media formats (TV, MOVIE, etc).", "enum": ["TV", "TV_SHORT", "MOVIE", "SPECIAL", "OVA", "ONA", "MUSIC", "MANGA", "NOVEL", "ONE_SHOT"], "title": "MediaFormat", "type": "string"}, "MediaSeason": {"description": "Enum representing media seasons (WINTER, SPRING, etc).", "enum": ["WINTER", "SPRING", "SUMMER", "FALL"], "title": "MediaSeason", "type": "string"}, "MediaStatus": {"description": "Enum representing media status (FINISHED, RELEASING, etc).", "enum": ["FINISHED", "RELEASING", "NOT_YET_RELEASED", "CANCELLED", "HIATUS"], "title": "MediaStatus", "type": "string"}, "MediaTitle": {"description": "Model representing media titles in various languages.", "properties": {"english": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "English"}, "native": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Native"}, "romaji": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Romaji"}, "userPreferred": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Userpreferred"}}, "title": "MediaTitle", "type": "object"}, "MediaType": {"description": "Enum representing media types (ANIME, MANGA).", "enum": ["ANIME", "MANGA"], "title": "MediaType", "type": "string"}, "MediaWithoutList": {"description": "Model representing a media entry without list information.", "properties": {"coverImage": {"anyOf": [{"$ref": "#/components/schemas/MediaCoverImage"}, {"type": "null"}]}, "duration": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Duration"}, "episodes": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Episodes"}, "format": {"anyOf": [{"$ref": "#/components/schemas/MediaFormat"}, {"type": "null"}]}, "id": {"title": "Id", "type": "integer"}, "season": {"anyOf": [{"$ref": "#/components/schemas/MediaSeason"}, {"type": "null"}]}, "seasonYear": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Seasonyear"}, "status": {"anyOf": [{"$ref": "#/components/schemas/MediaStatus"}, {"type": "null"}]}, "title": {"anyOf": [{"$ref": "#/components/schemas/MediaTitle"}, {"type": "null"}]}, "type": {"anyOf": [{"$ref": "#/components/schemas/MediaType"}, {"type": "null"}]}}, "required": ["id"], "title": "MediaWithoutList", "type": "object"}, "MetaResponse": {"properties": {"git_hash": {"title": "Git Hash", "type": "string"}, "version": {"title": "Version", "type": "string"}}, "required": ["version", "git_hash"], "title": "MetaResponse", "type": "object"}, "PinEntry-Input": {"description": "Serialized representation of a pin row.", "properties": {"anilist": {"anyOf": [{"$ref": "#/components/schemas/MediaWithoutList"}, {"type": "null"}]}, "anilist_id": {"title": "Anilist Id", "type": "integer"}, "created_at": {"format": "date-time", "title": "Created At", "type": "string"}, "fields": {"items": {"type": "string"}, "title": "Fields", "type": "array"}, "profile_name": {"title": "Profile Name", "type": "string"}, "updated_at": {"format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["profile_name", "anilist_id", "fields", "created_at", "updated_at"], "title": "PinEntry", "type": "object"}, "PinEntry-Output": {"description": "Serialized representation of a pin row.", "properties": {"anilist": {"anyOf": [{"$ref": "#/components/schemas/MediaWithoutList"}, {"type": "null"}]}, "anilist_id": {"title": "Anilist Id", "type": "integer"}, "created_at": {"format": "date-time", "title": "Created At", "type": "string"}, "fields": {"items": {"type": "string"}, "title": "Fields", "type": "array"}, "profile_name": {"title": "Profile Name", "type": "string"}, "updated_at": {"format": "date-time", "title": "Updated At", "type": "string"}}, "required": ["profile_name", "anilist_id", "fields", "created_at", "updated_at"], "title": "PinEntry", "type": "object"}, "PinFieldOption": {"description": "Metadata for a selectable pin field.", "properties": {"label": {"title": "Label", "type": "string"}, "value": {"title": "Value", "type": "string"}}, "required": ["value", "label"], "title": "PinFieldOption", "type": "object"}, "PinListResponse": {"description": "Response model for listing pins.", "properties": {"pins": {"items": {"$ref": "#/components/schemas/PinEntry-Output"}, "title": "Pins", "type": "array"}}, "required": ["pins"], "title": "PinListResponse", "type": "object"}, "PinOptionsResponse": {"description": "Response model for available pin field options.", "properties": {"options": {"items": {"$ref": "#/components/schemas/PinFieldOption"}, "title": "Options", "type": "array"}}, "required": ["options"], "title": "PinOptionsResponse", "type": "object"}, "PinSearchItem-Input": {"description": "Search result item combining AniList metadata with existing pin state.", "properties": {"anilist": {"$ref": "#/components/schemas/MediaWithoutList"}, "pin": {"anyOf": [{"$ref": "#/components/schemas/PinEntry-Input"}, {"type": "null"}]}}, "required": ["anilist"], "title": "PinSearchItem", "type": "object"}, "PinSearchItem-Output": {"description": "Search result item combining AniList metadata with existing pin state.", "properties": {"anilist": {"$ref": "#/components/schemas/MediaWithoutList"}, "pin": {"anyOf": [{"$ref": "#/components/schemas/PinEntry-Output"}, {"type": "null"}]}}, "required": ["anilist"], "title": "PinSearchItem", "type": "object"}, "PinSearchResponse": {"description": "Response model for AniList search results within the pin manager.", "properties": {"results": {"items": {"$ref": "#/components/schemas/PinSearchItem-Output"}, "title": "Results", "type": "array"}}, "required": ["results"], "title": "PinSearchResponse", "type": "object"}, "ProcessInfoModel": {"properties": {"cpu_count": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Cpu Count"}, "memory_mb": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Memory Mb"}, "pid": {"title": "Pid", "type": "integer"}}, "required": ["pid"], "title": "ProcessInfoModel", "type": "object"}, "ProfileConfigModel": {"description": "Serialized profile configuration exposed to the web UI.", "properties": {"anilist_user": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Anilist User"}, "destructive_sync": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Destructive Sync"}, "full_scan": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Full Scan"}, "plex_user": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Plex User"}, "sync_interval": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Sync Interval"}, "sync_modes": {"default": [], "items": {"type": "string"}, "title": "Sync Modes", "type": "array"}}, "title": "ProfileConfigModel", "type": "object"}, "ProfileRuntimeStatusModel": {"description": "Runtime status of a profile exposed to the web UI.", "properties": {"current_sync": {"anyOf": [{"additionalProperties": true, "type": "object"}, {"type": "null"}], "title": "Current Sync"}, "last_synced": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last Synced"}, "running": {"title": "Running", "type": "boolean"}}, "required": ["running"], "title": "ProfileRuntimeStatusModel", "type": "object"}, "ProfileStatusModel": {"description": "Combined profile configuration and runtime status exposed to the web UI.", "properties": {"config": {"$ref": "#/components/schemas/ProfileConfigModel"}, "status": {"$ref": "#/components/schemas/ProfileRuntimeStatusModel"}}, "required": ["config", "status"], "title": "ProfileStatusModel", "type": "object"}, "QueryCapabilitiesResponse": {"properties": {"fields": {"items": {"$ref": "#/components/schemas/FieldCapability"}, "title": "Fields", "type": "array"}}, "required": ["fields"], "title": "QueryCapabilitiesResponse", "type": "object"}, "QueryFieldOperator": {"description": "Supported operator tokens for query fields.", "enum": ["=", ">", ">=", "<", "<=", "*", "?", "range"], "title": "QueryFieldOperator", "type": "string"}, "QueryFieldType": {"description": "Supported value shapes for booru-like query fields.", "enum": ["int", "string", "enum"], "title": "QueryFieldType", "type": "string"}, "RestoreRequest": {"description": "Request body for triggering a restore.", "properties": {"filename": {"title": "Filename", "type": "string"}}, "required": ["filename"], "title": "RestoreRequest", "type": "object"}, "RestoreSummary": {"description": "Result of a restore operation.", "properties": {"elapsed_seconds": {"title": "Elapsed Seconds", "type": "number"}, "errors": {"items": {"additionalProperties": true, "type": "object"}, "title": "Errors", "type": "array"}, "filename": {"title": "Filename", "type": "string"}, "ok": {"title": "Ok", "type": "boolean"}, "processed": {"title": "Processed", "type": "integer"}, "restored": {"title": "Restored", "type": "integer"}, "skipped": {"title": "Skipped", "type": "integer"}, "total_entries": {"title": "Total Entries", "type": "integer"}}, "required": ["ok", "filename", "total_entries", "processed", "restored", "skipped", "errors", "elapsed_seconds"], "title": "RestoreSummary", "type": "object"}, "SchedulerSummaryModel-Input": {"properties": {"configured_profiles": {"title": "Configured Profiles", "type": "integer"}, "most_recent_sync": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Most Recent Sync"}, "most_recent_sync_profile": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Most Recent Sync Profile"}, "next_database_sync_at": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Next Database Sync At"}, "profiles": {"additionalProperties": {"$ref": "#/components/schemas/ProfileStatusModel"}, "title": "Profiles", "type": "object"}, "running": {"title": "Running", "type": "boolean"}, "running_profiles": {"title": "Running Profiles", "type": "integer"}, "sync_mode_counts": {"additionalProperties": {"type": "integer"}, "title": "Sync Mode Counts", "type": "object"}, "syncing_profiles": {"title": "Syncing Profiles", "type": "integer"}, "total_profiles": {"title": "Total Profiles", "type": "integer"}}, "required": ["running", "configured_profiles", "total_profiles", "running_profiles", "syncing_profiles", "sync_mode_counts", "profiles"], "title": "SchedulerSummaryModel", "type": "object"}, "SchedulerSummaryModel-Output": {"properties": {"configured_profiles": {"title": "Configured Profiles", "type": "integer"}, "most_recent_sync": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Most Recent Sync"}, "most_recent_sync_profile": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Most Recent Sync Profile"}, "next_database_sync_at": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Next Database Sync At"}, "profiles": {"additionalProperties": {"$ref": "#/components/schemas/ProfileStatusModel"}, "title": "Profiles", "type": "object"}, "running": {"title": "Running", "type": "boolean"}, "running_profiles": {"title": "Running Profiles", "type": "integer"}, "sync_mode_counts": {"additionalProperties": {"type": "integer"}, "title": "Sync Mode Counts", "type": "object"}, "syncing_profiles": {"title": "Syncing Profiles", "type": "integer"}, "total_profiles": {"title": "Total Profiles", "type": "integer"}}, "required": ["running", "configured_profiles", "total_profiles", "running_profiles", "syncing_profiles", "sync_mode_counts", "profiles"], "title": "SchedulerSummaryModel", "type": "object"}, "SettingsProfileModel": {"properties": {"name": {"title": "Name", "type": "string"}, "settings": {"additionalProperties": true, "title": "Settings", "type": "object"}}, "required": ["name", "settings"], "title": "SettingsProfileModel", "type": "object"}, "SettingsResponse": {"properties": {"global_config": {"additionalProperties": true, "title": "Global Config", "type": "object"}, "profiles": {"items": {"$ref": "#/components/schemas/SettingsProfileModel"}, "title": "Profiles", "type": "array"}}, "required": ["global_config", "profiles"], "title": "SettingsResponse", "type": "object"}, "StatusResponse": {"properties": {"profiles": {"additionalProperties": {"$ref": "#/components/schemas/ProfileStatusModel"}, "title": "Profiles", "type": "object"}}, "required": ["profiles"], "title": "StatusResponse", "type": "object"}, "SyncField": {"description": "Enumeration of AniList fields that can be synchronized with Plex.\n\nThese fields represent the data that can be synchronized between Plex\nand AniList for each media entry. Each enum value corresponds to an\nAniList API field name in snake_case format.", "enum": ["status", "score", "progress", "repeat", "notes", "started_at", "completed_at"], "title": "SyncField", "type": "string"}, "UndoResponse": {"description": "Response model for undo operation.", "properties": {"item": {"$ref": "#/components/schemas/HistoryItem"}}, "required": ["item"], "title": "UndoResponse", "type": "object"}, "UpdatePinRequest": {"description": "Request body for updating pin fields.", "properties": {"fields": {"items": {"anyOf": [{"$ref": "#/components/schemas/SyncField"}, {"type": "string"}]}, "title": "Fields", "type": "array"}}, "title": "UpdatePinRequest", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}, "src__web__routes__api__history__OkResponse": {"description": "Response model for successful operations.", "properties": {"ok": {"default": true, "title": "Ok", "type": "boolean"}}, "title": "OkResponse", "type": "object"}, "src__web__routes__api__pins__OkResponse": {"description": "Response model for successful operations.", "properties": {"ok": {"default": true, "title": "Ok", "type": "boolean"}}, "title": "OkResponse", "type": "object"}, "src__web__routes__api__sync__OkResponse": {"properties": {"ok": {"default": true, "title": "Ok", "type": "boolean"}}, "title": "OkResponse", "type": "object"}}}, "info": {"title": "PlexAniBridge", "version": "1.7.1"}, "openapi": "3.1.0", "paths": {"/api/backups/{profile}": {"get": {"description": "List backups for a profile.\n\nArgs:\n    profile (str): Profile name\n\nReturns:\n    ListBackupsResponse: List of available backups\n\nRaises:\n    SchedulerNotInitializedError: If the scheduler is not running.\n    ProfileNotFoundError: If the profile is unknown.", "operationId": "list_backups_api_backups__profile__get", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"title": "Profile", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListBackupsResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "List Backups", "tags": ["backups"]}}, "/api/backups/{profile}/raw/{filename}": {"get": {"description": "Return raw JSON content of a backup.\n\nThe response is unvalidated JSON so the UI can present a preview.\n\nRaises:\n    SchedulerNotInitializedError: If the scheduler is not running.\n    ProfileNotFoundError: If the profile is unknown.\n    InvalidBackupFilenameError: If the filename is invalid.\n    BackupFileNotFoundError: If the backup file was not found.", "operationId": "get_backup_raw_api_backups__profile__raw__filename__get", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"title": "Profile", "type": "string"}}, {"in": "path", "name": "filename", "required": true, "schema": {"title": "Filename", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": true, "title": "Response Get Backup Raw Api Backups  Profile  Raw  Filename  Get", "type": "object"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get Backup Raw", "tags": ["backups"]}}, "/api/backups/{profile}/restore": {"post": {"description": "Restore a backup file (no dry-run mode).\n\nRaises:\n    SchedulerNotInitializedError: If the scheduler is not running.\n    ProfileNotFoundError: If the profile is unknown.\n    InvalidBackupFilenameError: If the filename is invalid (e.g., path traversal).\n    BackupFileNotFoundError: If the backup file does not exist.", "operationId": "restore_backup_api_backups__profile__restore_post", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"title": "Profile", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RestoreRequest"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RestoreSummary"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Restore Backup", "tags": ["backups"]}}, "/api/history/{profile}": {"get": {"description": "Get paginated timeline for profile.\n\nArgs:\n    profile (str): The profile name.\n    page (int): The page number.\n    per_page (int): The number of items per page.\n    outcome (str | None): Filter by outcome.\n\nReturns:\n    GetHistoryResponse: The paginated history response.\n\nRaises:\n    SchedulerNotInitializedError: If the scheduler is not running.\n    ProfileNotFoundError: If the profile is unknown.", "operationId": "get_history_api_history__profile__get", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"title": "Profile", "type": "string"}}, {"in": "query", "name": "page", "required": false, "schema": {"default": 1, "title": "Page", "type": "integer"}}, {"in": "query", "name": "per_page", "required": false, "schema": {"default": 25, "title": "Per Page", "type": "integer"}}, {"description": "Filter by outcome", "in": "query", "name": "outcome", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "Filter by outcome", "title": "Outcome"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/GetHistoryResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get History", "tags": ["history"]}}, "/api/history/{profile}/{item_id}": {"delete": {"description": "Delete a history item.\n\nArgs:\n    profile (str): The profile name.\n    item_id (int): The ID of the history item to delete.\n\nReturns:\n    OkResponse: The response indicating success.\n\nRaises:\n    HistoryItemNotFoundError: If the specified item does not exist.", "operationId": "delete_history_api_history__profile___item_id__delete", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"title": "Profile", "type": "string"}}, {"in": "path", "name": "item_id", "required": true, "schema": {"title": "Item Id", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/src__web__routes__api__history__OkResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Delete History", "tags": ["history"]}}, "/api/history/{profile}/{item_id}/undo": {"post": {"description": "Undo a history item if possible.\n\nRaises:\n    SchedulerNotInitializedError: If the scheduler is not running.\n    ProfileNotFoundError: If the profile is unknown.\n    HistoryItemNotFoundError: If the specified item does not exist.", "operationId": "undo_history_api_history__profile___item_id__undo_post", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"title": "Profile", "type": "string"}}, {"in": "path", "name": "item_id", "required": true, "schema": {"title": "Item Id", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UndoResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Undo History", "tags": ["history"]}}, "/api/logs/file/{name}": {"get": {"description": "Return the last N lines of a log file parsed into JSON entries.\n\nArgs:\n    name (str): File name (basename) of the log file.\n    lines (int): Maximum number of lines to return (tail). Default 500.\n\nReturns:\n    JSONResponse: Ordered list (oldest first) of parsed log entries.\n\nRaises:\n    InvalidLogFileNameError: If the file name is invalid.\n    LogFileNotFoundError: If the requested log file does not exist.", "operationId": "get_log_file_api_logs_file__name__get", "parameters": [{"in": "path", "name": "name", "required": true, "schema": {"title": "Name", "type": "string"}}, {"in": "query", "name": "lines", "required": false, "schema": {"default": 500, "maximum": 2000, "minimum": 0, "title": "Lines", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/LogEntryModel"}, "title": "Response Get Log File Api Logs File  Name  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Fetch parsed tail of a log file", "tags": ["logs"]}}, "/api/logs/files": {"get": {"description": "Return metadata about available log files.\n\nReturns:\n    JSONResponse: List of log file metadata sorted by most recent first.", "operationId": "list_log_files_api_logs_files_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/LogFileModel"}, "title": "Response List Log Files Api Logs Files Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "List available log files", "tags": ["logs"]}}, "/api/mappings": {"get": {"description": "List mappings from AniMap database with optional search and pagination.\n\nArgs:\n    request (Request): Active request context for cancellation handling.\n    page (int): 1-based page number.\n    per_page (int): Number of items per page.\n    q (str | None): Booru-like query string.\n    custom_only (bool): Include only custom mappings.\n    with_anilist (bool): Include AniList metadata.\n\nReturns:\n    ListMappingsResponse: The paginated list of mappings.", "operationId": "list_mappings_api_mappings_get", "parameters": [{"in": "query", "name": "page", "required": false, "schema": {"default": 1, "minimum": 1, "title": "Page", "type": "integer"}}, {"in": "query", "name": "per_page", "required": false, "schema": {"default": 25, "maximum": 250, "minimum": 1, "title": "Per Page", "type": "integer"}}, {"in": "query", "name": "q", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Q"}}, {"in": "query", "name": "custom_only", "required": false, "schema": {"default": false, "title": "Custom Only", "type": "boolean"}}, {"in": "query", "name": "with_anilist", "required": false, "schema": {"default": false, "title": "With Anilist", "type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListMappingsResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "List Mappings", "tags": ["mappings"]}, "post": {"description": "Create a new custom mapping.\n\nArgs:\n    mapping (dict[str, Any]): The mapping data to create.\n\nReturns:\n    dict[str, Any]: The created mapping.\n\nRaises:\n    MissingAnilistIdError: If anilist_id is not provided.\n    UnsupportedMappingFileExtensionError: If the custom file extension is\n        unsupported.", "operationId": "create_mapping_api_mappings_post", "requestBody": {"content": {"application/json": {"schema": {"additionalProperties": true, "title": "Mapping", "type": "object"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MappingItemModel"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Create Mapping", "tags": ["mappings"]}}, "/api/mappings/query-capabilities": {"get": {"description": "Return supported operators for each queryable field.\n\nThis allows the frontend to tailor suggestions based on backend capabilities.", "operationId": "get_query_capabilities_api_mappings_query_capabilities_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryCapabilitiesResponse"}}}, "description": "Successful Response"}}, "summary": "Get Query Capabilities", "tags": ["mappings"]}}, "/api/mappings/{mapping_id}": {"delete": {"description": "Delete a mapping.\n\nArgs:\n    mapping_id (int): The ID of the mapping to delete.\n\nReturns:\n    dict[str, Any]: A confirmation message.\n\nRaises:\n    UnsupportedMappingFileExtensionError: If the custom file extension is\n        unsupported.", "operationId": "delete_mapping_api_mappings__mapping_id__delete", "parameters": [{"in": "path", "name": "mapping_id", "required": true, "schema": {"title": "Mapping Id", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DeleteMappingResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Delete Mapping", "tags": ["mappings"]}, "get": {"description": "Retrieve a single mapping by ID.\n\nArgs:\n    mapping_id (int): The ID of the mapping to retrieve.\n\nReturns:\n    dict[str, Any]: The mapping data.\n\nRaises:\n    MappingNotFoundError: If the mapping does not exist.", "operationId": "get_mapping_api_mappings__mapping_id__get", "parameters": [{"in": "path", "name": "mapping_id", "required": true, "schema": {"title": "Mapping Id", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MappingItemModel"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get Mapping", "tags": ["mappings"]}, "put": {"description": "Update an existing custom mapping.\n\nArgs:\n    mapping_id (int): The ID of the mapping to update.\n    mapping (dict[str, Any]): The updated mapping data.\n\nReturns:\n    dict[str, Any]: The updated mapping.\n\nRaises:\n    MappingIdMismatchError: If anilist_id in the body does not match the URL.\n    UnsupportedMappingFileExtensionError: If the custom file extension is\n        unsupported.", "operationId": "update_mapping_api_mappings__mapping_id__put", "parameters": [{"in": "path", "name": "mapping_id", "required": true, "schema": {"title": "Mapping Id", "type": "integer"}}], "requestBody": {"content": {"application/json": {"schema": {"additionalProperties": true, "title": "Mapping", "type": "object"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MappingItemModel"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Update Mapping", "tags": ["mappings"]}}, "/api/pins/fields": {"get": {"description": "Return selectable pin field metadata.\n\nReturns:\n    PinOptionsResponse: Available pin field options.", "operationId": "get_pin_fields_api_pins_fields_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PinOptionsResponse"}}}, "description": "Successful Response"}}, "summary": "Get Pin Fields", "tags": ["pins"]}}, "/api/pins/{profile}": {"get": {"description": "List all pinned AniList entries for a profile.\n\nArgs:\n    profile (str): Profile name.\n    with_anilist (bool): Include AniList metadata for each pin when true.\n\nReturns:\n    PinListResponse: List of pinned entries.", "operationId": "list_pins_api_pins__profile__get", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"minLength": 1, "title": "Profile", "type": "string"}}, {"in": "query", "name": "with_anilist", "required": false, "schema": {"default": false, "title": "With Anilist", "type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PinListResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "List Pins", "tags": ["pins"]}}, "/api/pins/{profile}/search": {"get": {"description": "Search AniList for entries to manage pins against.\n\nArgs:\n    profile (str): Profile name to scope existing pins.\n    q (str | None): Text query to search AniList titles.\n    limit: Maximum number of search results to return.\n\nReturns:\n    PinSearchResponse: Matched AniList titles with pin status.", "operationId": "search_pins_api_pins__profile__search_get", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"minLength": 1, "title": "Profile", "type": "string"}}, {"in": "query", "name": "q", "required": false, "schema": {"anyOf": [{"minLength": 1, "type": "string"}, {"type": "null"}], "title": "Q"}}, {"in": "query", "name": "limit", "required": false, "schema": {"default": 10, "maximum": 50, "minimum": 1, "title": "Limit", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PinSearchResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Search Pins", "tags": ["pins"]}}, "/api/pins/{profile}/{anilist_id}": {"delete": {"description": "Delete pin configuration for an AniList entry.\n\nArgs:\n    profile (str): Profile name.\n    anilist_id (int): AniList ID.\n\nReturns:\n    OkResponse: Confirmation of successful deletion.", "operationId": "delete_pin_api_pins__profile___anilist_id__delete", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"minLength": 1, "title": "Profile", "type": "string"}}, {"in": "path", "name": "anilist_id", "required": true, "schema": {"minimum": 1, "title": "Anilist Id", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/src__web__routes__api__pins__OkResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Delete Pin", "tags": ["pins"]}, "get": {"description": "Retrieve pin configuration for a specific AniList entry.\n\nArgs:\n    profile (str): Profile name.\n    anilist_id (int): AniList ID.\n    with_anilist (bool): Include AniList metadata for the pin when true.\n\nReturns:\n    PinEntry: Pin configuration.", "operationId": "get_pin_api_pins__profile___anilist_id__get", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"minLength": 1, "title": "Profile", "type": "string"}}, {"in": "path", "name": "anilist_id", "required": true, "schema": {"minimum": 1, "title": "Anilist Id", "type": "integer"}}, {"in": "query", "name": "with_anilist", "required": false, "schema": {"default": false, "title": "With Anilist", "type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PinEntry-Output"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get Pin", "tags": ["pins"]}, "put": {"description": "Create or update pin fields for an AniList entry.\n\nArgs:\n    request (UpdatePinRequest): Request body with fields to pin.\n    profile (str): Profile name.\n    anilist_id (int): AniList ID.\n    with_anilist (bool): Include AniList metadata for the pin when true.\n\nReturns:\n    PinEntry: Updated pin configuration.", "operationId": "upsert_pin_api_pins__profile___anilist_id__put", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"minLength": 1, "title": "Profile", "type": "string"}}, {"in": "path", "name": "anilist_id", "required": true, "schema": {"minimum": 1, "title": "Anilist Id", "type": "integer"}}, {"in": "query", "name": "with_anilist", "required": false, "schema": {"default": false, "title": "With Anilist", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdatePinRequest"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PinEntry-Output"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Upsert Pin", "tags": ["pins"]}}, "/api/status": {"get": {"description": "Get the status of the application.\n\nReturns:\n    dict[str, Any]: The status of the application.", "operationId": "status_api_status_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/StatusResponse"}}}, "description": "Successful Response"}}, "summary": "Status", "tags": ["status"]}}, "/api/sync": {"post": {"description": "Trigger a sync for all profiles.\n\nArgs:\n    poll (bool): Whether to poll for updates.\n\nReturns:\n    OkResponse: The response containing the sync status.\n\nRaises:\n    SchedulerNotInitializedError: If the scheduler is not running.", "operationId": "sync_all_api_sync_post", "parameters": [{"in": "query", "name": "poll", "required": false, "schema": {"default": false, "title": "Poll", "type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/src__web__routes__api__sync__OkResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Sync All", "tags": ["sync"]}}, "/api/sync/database": {"post": {"description": "Trigger a sync for the database.\n\nReturns:\n    OkResponse: The response containing the sync status.\n\nRaises:\n    SchedulerNotInitializedError: If the scheduler is not running.", "operationId": "sync_database_api_sync_database_post", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/src__web__routes__api__sync__OkResponse"}}}, "description": "Successful Response"}}, "summary": "Sync Database", "tags": ["sync"]}}, "/api/sync/profile/{profile}": {"post": {"description": "Trigger a sync for a specific profile.\n\nArgs:\n    profile (str): The profile to sync.\n    poll (bool): Whether to poll for updates.\n    rating_keys (list[str] | None): Specific rating keys to sync (if any).\n\nReturns:\n    OkResponse: The response containing the sync status.\n\nRaises:\n    SchedulerNotInitializedError: If the scheduler is not running.\n    ProfileNotFoundError: If the profile does not exist.", "operationId": "sync_profile_api_sync_profile__profile__post", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"title": "Profile", "type": "string"}}, {"in": "query", "name": "poll", "required": false, "schema": {"default": false, "title": "Poll", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Body_sync_profile_api_sync_profile__profile__post"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/src__web__routes__api__sync__OkResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Sync Profile", "tags": ["sync"]}}, "/api/system/about": {"get": {"description": "Get runtime metadata.\n\nReturns:\n    dict[str, Any]: The runtime metadata.\n\nRaises:\n    SchedulerUnavailableError: If scheduler status cannot be retrieved.\n    PlexAniBridgeError: Any domain error raised by underlying components.", "operationId": "api_about_api_system_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AboutResponse"}}}, "description": "Successful Response"}}, "summary": "Return runtime & scheduler diagnostics", "tags": ["system"]}}, "/api/system/meta": {"get": {"description": "Application metadata (version, git hash).\n\nReturns:\n    dict[str, str]: The application metadata.", "operationId": "meta_api_system_meta_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaResponse"}}}, "description": "Successful Response"}}, "summary": "Meta", "tags": ["system", "meta"]}}, "/api/system/settings": {"get": {"description": "Return the current application configuration as JSON.\n\nReturns:\n    dict[str, Any]: The serialized configuration.", "operationId": "api_settings_api_system_settings_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SettingsResponse"}}}, "description": "Successful Response"}}, "summary": "Return serialized configuration", "tags": ["system"]}}, "/webhook/plex": {"post": {"description": "Receive Plex webhook and trigger a targeted sync.\n\nArgs:\n    payload (PlexWebhook): The parsed webhook payload.\n\nReturns:\n    A dictionary containing the result of the webhook processing.\n\nRaises:\n    SchedulerNotInitializedError: If the scheduler is not running.\n    InvalidWebhookPayloadError: If the payload is invalid.\n    ProfileNotFoundError: If no profiles match the account id.\n    WebhookModeDisabledError: If webhook sync mode is disabled for the profile.", "operationId": "plex_webhook_webhook_plex_post", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": true, "title": "Response Plex Webhook Webhook Plex Post", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Plex Webhook", "tags": ["plex"]}}, "/webhook/plex/{profile}": {"post": {"description": "Deprecated webhook endpoint that took a profile name as a parameter.", "operationId": "_deprecated_plex_webhook_profile_webhook_plex__profile__post", "parameters": [{"in": "path", "name": "profile", "required": true, "schema": {"title": "Profile", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": " Deprecated Plex Webhook Profile", "tags": ["plex"]}}}}
