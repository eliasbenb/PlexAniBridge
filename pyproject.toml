[project]
name = "PlexAniBridge"
version = "1.2.1"
description = "The smart way to keep your AniList profile perfectly synchronized with your Plex library."
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }

authors = [
    { name = "Elias Benbourenane", email = "eliasbenbourenane@gmail.com" },
]
maintainers = [
    { name = "Elias Benbourenane", email = "eliasbenbourenane@gmail.com" },
]

keywords = [
    "docker",
    "sync",
    "scrobble",
    "synchronization",
    "monitoring",
    "anime",
    "plex",
    "anilist",
    "plexpy",
    "plexanibridge",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "aiocache>=0.12.3",
    "aiohttp>=3.12.13",
    "alembic>=1.15.2",
    "async-lru>=2.0.5",
    "cachetools>=5.5.2",
    "colorama>=0.4.6",
    "fastapi[all]>=0.116.1",
    "limiter>=0.5.0",
    "plexapi>=4.17.0",
    "pydantic>=2.11.1",
    "pydantic-settings>=2.9.1",
    "pyyaml>=6.0.2",
    "rapidfuzz>=3.13.0",
    "requests>=2.32.3",
    "ruamel-yaml>=0.18.14",
    "sqlalchemy>=2.0.41",
    "tzlocal>=5.3.1",
]

[project.scripts]
pab-build = "scripts.dev:build"
pab-clean = "scripts.dev:clean"
pab-deps-install = "scripts.dev:deps_install"
pab-deps-upgrade = "scripts.dev:deps_upgrade"
pab-dev = "scripts.dev:dev"
pab-format = "scripts.dev:format"
pab-lint = "scripts.dev:lint"
pab-start = "scripts.dev:start"

[project.urls]
Documentation = "https://plexanibridge.elias.eu.org"
Homepage = "https://plexanibridge.elias.eu.org"
Issues = "https://github.com/eliasbenb/PlexAniBridge/issues"
Source = "https://github.com/eliasbenb/PlexAniBridge"

[tool.hatch.build.targets.wheel]
packages = ["scripts"]

[tool.pyright]
extraPaths = ["./src/stubs"]
include = ["main.py", "src"]

[tool.ruff]
include = ["pyproject.toml", "src/**/*.py", "scripts/**/*.py"]
indent-width = 4
line-length = 88

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"
quote-style = "double"

[tool.ruff.lint]
select = ["E", "F", "UP", "B", "SIM", "I", "D", "RUF"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "fastapi.Body",
    "fastapi.Cookie",
    "fastapi.Depends",
    "fastapi.File",
    "fastapi.Form",
    "fastapi.Header",
    "fastapi.Path",
    "fastapi.Query",
    "fastapi.Security",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.uv.workspace]
members = ["docs"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = ["py-spy>=0.4.0", "ruff>=0.12.0"]
